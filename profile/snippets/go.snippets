# create initial structure of main file
snippet main
	// Author: James Mallon <jamesmallondev@gmail.com>
	// Main package
	package main

	import (
		"log"
		${1}
	)

	// starting point...
	func main() {
		${2}
	}
# create function main
snippet fum
	// main function - garden of eden
	func main() {
		${1}
	}
# create import statement
snippet imp
	import (
	 	"${1}"
	)
# create function http (res, *req)
snippet funh 
	// $1 function - ${2}
	func ${1:}(w http.ResponseWriter, r *http.Request) ${3} {
		${4}	
	}
# create function
snippet fun
	// $1 function - ${2}
	func ${1:}(${3}) ${4} {
		${5}	
	}
# create function init
snippet fin
	// init function - data and process initialization
	func init() {
		${1}
	}
# create function test -
snippet fut
	// Test function Test$1 to evaluate the $1 ${2} 
	func Test${1:}(t *testing.T) {
		${3}
	}
# create function test - http request/response evaluation
snippet futh 
	// Test function Test$1 to evaluate HTTP requests/reponses the $1 ${2} 
	func Test${1:}(t *testing.T) {
		// setUp()
		mux := http.NewServeMux() 

		mux.HandleFunc("${3}", ${4}) // route

		w := httptest.NewRecorder() // get the ResponseWrite pointer

		if w.Code != http.StatusOK {
			// t.Errorf("Response code should be 200 but %d", w.Code)
		}
		// tearDown()
	}
# create  function main test
snippet futm
	// Test function TestMain to evaluate the main function
	func TestMain(m *testing.M) {
		${1}
	}
# create function test benchmark
snippet futb
	// Test function Benchmark$1 to evaluate the $1 
	func Benchmark${1:}(b *testing.B) {
		${3}
		for i := 0; i < b.N; i++ {
			${4}
		}
	}
# create function test setUp
snippet futsu
	// Function setUp - set up the initial configuration 
	func setUp() {
		${1}
	}
# create function test tearDown
snippet futtd
	// Function tearDown- supose to clean the garbage? 
	func tearDown() {
		${1}
	}
# create method
snippet meth
	// $2 method - ${3}
	func (this ${1}) ${2:}(${4}) ${5} {
		${6}	
	}
# create method http (res, *req)
snippet methh
	// $2 method - ${3}
	func (this ${1}) ${2:}(w http.ResponseWriter, r *http.Request${4}) ${5} {
		${6}	
	}
# create package
snippet pac
	// Author: James Mallon <jamesmallondev@gmail.com>
	// $1 package - ${2}
	package ${1:}

	${3}
# create type struct
snippet tst 
	// Struct type $1 - ${2}
	type ${1:} struct{${3}}
# create type interface
snippet tit
	// Interface type $1 - ${2}
	type ${1:} interface{${3}}
